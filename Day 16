Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

A subarray is a contiguous non-empty sequence of elements within an array.






class Solution {
    public int subarraySum(int[] nums, int k) {
        if(nums.length == 0) return 0;
        int count = 0;

        int prefix[] = new int[nums.length];

        prefix[0] = nums[0];
        for(int i = 1; i < nums.length; i++ ){
            prefix[i] = prefix[i-1] + nums[i];
            
        }
        for(int i = 0; i < nums.length; i++ ){
           if(prefix[i] == k) count++;
            
        }

        HashMap<Integer, Integer> map = new HashMap<>();

        for(int i = 0; i < nums.length; i++ ){
            if(map.containsKey(prefix[i]-k)){
                count += map.get(prefix[i]-k);
            }
            map.put(prefix[i], map.getOrDefault(prefix[i] , 0)+1);
        }
     


        return count;

    }
}
